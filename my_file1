#include <bits/stdc++.h>
#define endl '\n'
#define strim stringstream
#define ll long long int
#define inf INT_MAX
#define mod %
#define find_array_max *max_element(arr.begin(), arr.end());
#define find_array_min *min_element(arr.begin(), arr.end());
#define pii pair<int, int>
#define pll pair<ll, ll>
#define negInf INT_MIN
#define left_range(i, x, y) for (int i = x; i <= y; i++)
#define right_range(i, x, y) for (int i = y; i >= x; i--)
void hey_output()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
}
using namespace std;
const int N = 1e5 + 7;

class Node
{
public:
    int val;
    Node *next;
    Node *prev;
    Node(int val)
    {
        this->val = val;
        this->next = nullptr;
        this->prev = nullptr;
    }
};
class myStack
{
public:
    Node *head = nullptr;
    Node *tail = nullptr;
    int cnt = 0;
    void push(int val)
    {
        cnt++;

        Node *newNode = new Node(val);
        if (head == nullptr)
        {
            head = newNode;
            tail = newNode;
            return;
        }
        tail->next = newNode;
        tail->next->prev = tail;
        tail = newNode;
    }
    void pop()
    {
        cnt--;
        Node *deleteNode = tail;
        tail = tail->prev;
        delete deleteNode;
        if (tail == nullptr)
            head = nullptr;
        else
            tail->next = nullptr;
    }
    int top()
    {
        return tail->val;
    }
    int size()
    {
        return cnt;
    }
    bool empty()
    {
        if (cnt == 0)
            return true;
        else
            return false;
    }
};
void go_on()
{
    myStack st;
    int n;
    cin >> n;
    left_range(i, 0, n - 1)
    {
        int val;
        cin >> val;
        st.push(val);
    }
    while (!st.empty())
    {
        cout << st.top() << " ";
        st.pop();
    }
}

int32_t main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    // hey_output();
    go_on();

    return 0;
}
